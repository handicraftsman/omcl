#!/usr/bin/env ruby
require "omcl"

require "fileutils"
require "optparse"

$authed = false

OMCL.load_conf
$options = {} 
OptionParser.new do |opts|
  opts.banner = "Usage: omcl [options]"

  opts.on("-aNAME", "--auth=NAME", "Use given profile") do |arg|
    $options[:auth] = arg
  end

  opts.on("-uNAME", "--user=NAME", "Uses given username (to launch in offline mode). Overrides online-mode") do |arg|
    $authed = true
    $username = arg
    $access_token = (('a'..'z').to_a+('0'..'9').to_a).sample(100).join
    $uid = (('a'..'z').to_a+('0'..'9').to_a).sample(100).join
  end

  opts.on("-h", "--help", "Prints this help") do
    puts opts
    exit
  end
end.parse!

# ------
# |Auth|
# ------


if $options[:auth]
  dat = $profiles[$options[:auth]]
  auth = $auth[dat.auth]
  if auth.type == :online
    $type         = auth.type
    $state        = OMCL::Auth.authenticate(auth.url, dat.user, dat.pass).body.to_s
    $state        = JSON.load $state
    $access_token = $state["accessToken"]
    $uid          = $state["selectedProfile"]["id"]
    $username     = $state["selectedProfile"]["name"]
    RG::Log.write "Successfully authenticated for #{$username}!"
  else
    $access_token = auth.token
  end
  $authed = true
end

# ----------
# |Commands|
# ----------

case ARGV[0].downcase
when "versions"
  # Version-Manager
  data = HTTP.get "https://launchermeta.mojang.com/mc/game/version_manifest.json"
  data = JSON.load data
  $versions = {}
  data["versions"].each do |v|
    $versions[v["id"]] = v["url"]
  end
  case ARGV[1].downcase
  when "list"
    if ARGV[2].downcase == nil
      # Remote Lister
      puts "Latest release: #{data["latest"]["release"]}\nLatest snapshot: #{data["latest"]["snapshot"]}"
      data["versions"].reverse.each do |v|
        puts "\nID: #{v["id"]}\nType: #{v["type"]}\n"
      end
    elsif ARGV[2].downcase.class == String
      # Local Lister
      unless File.exist? File.expand_path "~/omcl/#{ARGV[2].downcase}"
        RG::Log.crash "Given instance does not exist!"
      end
      ls = Dir[File.expand_path "~/omcl/#{ARGV[2].downcase}/bin/*.jar"]
      ls = ls.map do |l|
        /(.*)\.jar/.match(File.basename l)[1]
      end
      puts "Available versions for instance `#{ARGV[2].downcase}`: #{ls.inspect}"
    end

  when "get"
    OMCL.downloadMC(ARGV[2], ARGV[3])
  end

when "run"
  # Runner
  unless ARGV[1].downcase
    RG::Log.crash "No instance name!"
  end
  unless File.exist? File.expand_path "~/omcl/#{ARGV[1].downcase}"
    RG::Log.crash "Given instance does not exist!"
  end
  OMCL.launchMC(ARGV[1].downcase, File.expand_path("~/omcl/#{ARGV[1].downcase}"))
end

# YAY:     "mainClass": "net.minecraft.client.main.Main",